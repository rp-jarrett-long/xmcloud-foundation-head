@layer core {
  .surface-primary {
    border-color: var(--rp-semantic-color-border-default-primary);
    background-color: var(--rp-semantic-color-surface-default-primary);
    color: var(--rp-semantic-color-content-default-primary);
  }

  .surface-primary-inverse {
    border-color: var(--rp-semantic-color-border-inverse-primary);
    background-color: var(--rp-semantic-color-surface-inverse-primary);
    color: var(--rp-semantic-color-content-inverse-primary);
  }

  .surface-secondary {
    border-color: var(--rp-semantic-color-border-default-secondary);
    background-color: var(--rp-semantic-color-surface-default-secondary);
    color: var(--rp-semantic-color-content-default-secondary);
  }

  .surface-secondary-inverse {
    border-color: var(--rp-semantic-color-border-inverse-secondary);
    background-color: var(--rp-semantic-color-surface-inverse-secondary);
    color: var(--rp-semantic-color-content-inverse-secondary);
  }

  .surface-tertiary {
    border-color: var(--rp-semantic-color-border-default-tertiary);
    background-color: var(--rp-semantic-color-surface-default-tertiary);
    color: var(--rp-semantic-color-content-default-tertiary);
  }

  .surface-tertiary-inverse {
    border-color: var(--rp-semantic-color-border-inverse-tertiary);
    background-color: var(--rp-semantic-color-surface-inverse-tertiary);
    color: var(--rp-semantic-color-content-inverse-tertiary);
  }

  [class*='surface-'].surface-card,
  [class*='surface-'] .surface-card {
    border-width: var(--rp-semantic-measures-stroke-small);
    border-radius: var(--rp-semantic-measures-radius-large);
    border-style: solid;
    padding-inline: var(--rp-semantic-measures-spacing-024);
  }
}
